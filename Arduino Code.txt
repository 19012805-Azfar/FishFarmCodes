
//////////////////////////////////////////////////////////

//TEMPERATURE DEFINE//

#include <DHT.h>
#include <DHT_U.h>
#include <Wire.h>
#include <SPI.h>

//Libraries
#include <DHT.h>;

//Constants
#define DHTPIN 7     // what pin we're connected to
#define DHTTYPE DHT22   // DHT 22  (AM2302)
DHT dht(DHTPIN, DHTTYPE); //// Initialize DHT sensor for normal 16mhz Arduino

//Variables
int chk;
float hum;  //Stores humidity value
float temp1; //Stores temperature value
//////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////

  //pH DEFINE//

#define SensorPin A0          // the pH meter Analog output is connected with the Arduinoâ€™s Analog
unsigned long int avgValue;  //Store the average value of the sensor feedback
float b;
int buf[10],tempPH;
//////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////

 //THINGSPEAK//
 
#include <BridgeClient.h>
#include "ThingSpeak.h" // always include thingspeak header file after other header files and custom macros

#define SECRET_CH_ID 1437170      // replace 0000000 with your channel number
#define SECRET_WRITE_APIKEY "Y2AU1VEKBUQXCGJ7"   // replace XYZ with your channel write API Key


BridgeClient client;
unsigned long myChannelNumber = SECRET_CH_ID;
const char * myWriteAPIKey = SECRET_WRITE_APIKEY;

//////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////





void setup() {
//////////////////////////////////////////////////////////
 //THINGSPEAK//
  Serial.begin(115200);  //Initialize serial
  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo native USB port only
  }
  
  Bridge.begin();
  ThingSpeak.begin(client);  // Initialize ThingSpeak
  
//////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////
  // TEMPERATURE  //
{
  Serial.begin(9600);
  dht.begin();
}
//////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////
  //pH //
{
  pinMode(13,OUTPUT);  
  Serial.begin(9600);  
  Serial.println("Ready");    //Test the serial monitor
}
//////////////////////////////////////////////////////////

}


void loop() {
  
 


//////////////////////////////////////////////////////////
  //TEMPERATURE CODE//
  
    delay(1000);
    //Read data and store it to variables hum and temp
    hum = dht.readHumidity();
    temp1= dht.readTemperature();
    //Print temp and humidity values to serial monitor
    Serial.print("Humidity: ");
    Serial.print(hum);
    Serial.print(" %, Temp: ");
    Serial.print(temp1);
    Serial.println(" Celsius");
    delay(1000); //Delay 1 sec.
//////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////
  //pH CODE//
  
for(int i=0;i<10;i++)       //Get 10 sample value from the sensor for smooth the value
  { 
    buf[i]=analogRead(SensorPin);
    delay(10);
  }
  for(int i=0;i<9;i++)        //sort the analog from small to large
  {
    for(int j=i+1;j<10;j++)
    {
      if(buf[i]>buf[j])
      {
        tempPH=buf[i];
        buf[i]=buf[j];
        buf[j]=tempPH;
      }
    }
  }
  avgValue=0;
  for(int i=2;i<8;i++)                      //take the average value of 6 center sample
    avgValue+=buf[i];
  float phValue=(float)avgValue*5.0/1024/6; //convert the analog into millivolt
  phValue=3.5*phValue;                      //convert the millivolt into pH value
  Serial.print("    pH:");  
  Serial.print(phValue,2);
  Serial.println(" ");
  digitalWrite(13, HIGH);       
  delay(2000);
  digitalWrite(13, LOW);
//////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////
 //THINGSPEAK//

  // Write to ThingSpeak. There are up to 8 fields in a channel, allowing you to store up to 8 different
  // pieces of information in a channel.  Here, we write to fields.

ThingSpeak.setField(1, phValue);
 ThingSpeak.setField(2, temp1);
 ThingSpeak.setField(3, hum);
 
 int x = ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey); // Temperature Write

  
 
  if (x == 200){
    Serial.println("Channel update successful.");
  }else{
    Serial.println("Problem updating channel. HTTP error code " + String(x));
  }
 
  delay(20000); // Wait 20 seconds to update the channel again

  
}